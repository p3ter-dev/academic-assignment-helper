version: '3.9'

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: academic_postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: always

  backend:
    build: ./backend
    container_name: academic_backend
    env_file:
      - .env
    depends_on:
      - postgres
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    working_dir: /app
    restart: on-failure

  rag_service:
    build: ./rag_service
    container_name: academic_rag_service
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
    ports:
      - "8001:8001"
    restart: on-failure

  n8n:
    image: n8nio/n8n
    container_name: academic_n8n
    env_file:
      - .env
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: academic_pgadmin
    env_file:
      - .env
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: always

volumes:
  pgdata: